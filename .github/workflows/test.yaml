name: Test Pipeline

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y make gcc curl nano exa git wget lsb-release sudo build-essential clang libreadline8 libreadline-dev

    - name: Replace debug flags and test
      run: |
        sed -i 's/^CFLAGS\s*:=\s*-Wextra -Wall -Werror\s*#.*$/CFLAGS\t:=\t-Wextra -Wall -Werror #-g -fsanitize=address -O1/' Makefile
        sed -i 's/^#define DEBUG .*/#define DEBUG 0/' inc/minishell.h
        make tester > output.txt 2>&1
      
    - name: Parse test results
      id: parse_results
      run: |
        # Extract numbers only within the "RESULT" block
        result_block=$(awk '/RESULT/{flag=1; next} flag{print}' output.txt)
        passed_tests_result=$(echo "$result_block" | grep -o '✅ [0-9]*' | awk '{print $2}')
        failed_tests_result=$(echo "$result_block" | grep -o '❌ [0-9]*' | awk '{print $2}')
        passed_tests=$(echo "$result_block" | grep -o '✅ [0-9]*' | awk '{print $2}')
        failed_tests=$(echo "$result_block" | grep -o '❌ [0-9]*' | awk '{print $2}')
        xml="<testsuites><testsuite name=\"ExampleSuite\" tests=\"$(($passed_tests + $failed_tests))\" passed=\"$passed_tests\" failures=\"$failed_tests\"></testsuite></testsuites>"
        echo "$xml" > tests_summary.xml
      
    - name: Print test summary XML
      run: cat tests_summary.xml
      
    - name: Publish test summary
      uses: actions/upload-artifact@v2
      with:
        name: test-summary
        path: tests_summary.xml
      
    - name: Upload test summary to Insights
      uses: test-summary/action@v2
      with:
        paths: tests_summary.xml
    
    - name: Comment on pull request
      if: always()
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.SECRET_TOKEN }}
        script: |
          const fs = require('fs');
          const xml = fs.readFileSync('tests_summary.xml', 'utf8');
          const testsuite = xml.match(/<testsuite[^>]*>(.*?)<\/testsuite>/s);
          const passed = testsuite[0].match(/passed="(\d+)"/)[1];
          const failed = testsuite[0].match(/failures="(\d+)"/)[1];
          const comment = `## Test Summary\n\nTotal tests: ${parseInt(passed) + parseInt(failed)}\nPassed: ${passed}\nFailed: ${failed}`;
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
